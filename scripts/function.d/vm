. $NINJA_FUN_DIR/commons

#
# automatic install a KVM
#
ninja-install_kvm() {
  #((root_is_required)) || return 1
  
  echo -e "\nInstall a VM automatically with required information"
  name=""
  memory="2048"
  vcpus="2"
  disk_path=""
  disk_size="10"
  network="bridge=virbr0"
  iso_path=""
  ks_path=""

  while (( "$#" )); do
    case "$1" in
    "--name"*)
      name="$2"
      ;;
    "--memory"*)
      memory="$2"
      ;;
    "--vcpus"*)
      vcpus="$2"
      ;;
    "--disk_path"*)
      disk_path="$2"
      ;;
    "--disk_size"*)
      disk_size="$2"
      ;;
    "--network"*)
      network="$2"
      ;;
    "--iso_path"*)
      iso_path="$2"
      ;;
    "--ks_path"*)
      ks_path="$2"
      ;;
    *)
      ;;
    esac

    shift
    shift
  done

  if [ "$name" == "" -o "$disk_path" == "" -o "$iso_path" == "" -o "$ks_path" == "" ]; then
    echo -e "\n\e[31mUsage: ninja-install_kvm --name VM_NAME --memory MEMORY[default: 2048] --vcpus VCPUS[default: 2] --disk_path VM_IMG_PATH --disk_size DISK_SIZE[default: 10] --network NETWORK[default: bridge=virbr0] --iso_path LINUX_ISO_FILE --ks_path Kick_Start_File \e[0m\n"
    return 1
  fi
  if [ ! -f "$iso_path" ]; then
    ninja-error "Linux ISO file: $iso_path does not exist!"
    return 1
  fi
  if [ "`file $iso_path |grep \"ISO 9660\"`" == "" ]; then
    ninja-error "$iso_path is not a valid ISO file"
    return 1
  fi
  if [ ! -f "$ks_path" ]; then
    ninja-error "Linux Kick start file: $ks_path does not exist!"
    return 1
  fi
  ks_base_name=`basename $ks_path`
  echo -e "\nUsing the following command to install the vm automatically:\n"
  echo -e "\nvirt-install --hvm --name $name --memory $memory --vcpus $vcpus --disk path=$disk_path,size=$disk_size --network $network --location $iso_path --initrd-inject=$ks_path --extra-args=\"ks=file:/$ks_base_name console=tty0 console=ttyS0,115200n8\""
  echo -e ""
  echo -e "The example kick start file for RHEL 7 can be like: "
  echo -e ""
  echo -e "auth --enableshadow --passalgo=sha512"
  echo -e "keyboard us"
  echo -e "timezone Asia/Shanghai --isUtc"
  echo -e "lang en_US.UTF-8"
  echo -e "rootpw redhat123"
  echo -e "bootloader --location=mbr --append=\"rhgb quiet crashkernel=auto\""
  echo -e "reboot"
  echo -e "text"
  echo -e "cdrom"
  echo -e "zerombr"
  echo -e "clearpart --all --initlabel"
  echo -e "autopart"
  echo -e "network --bootproto=dhcp"
  echo -e "%packages"
  echo -e "@core"
  echo -e "--nobase"
  echo -e "%end"
  echo -e ""
  
  virt-install --hvm --name $name --memory $memory --vcpus $vcpus --disk path=$disk_path,size=$disk_size --network $network --location $iso_path --initrd-inject=$ks_path --extra-args="ks=file:/$ks_base_name console=tty0 console=ttyS0,115200n8"

}


#
# get IP of a VM
#
ninja-get_vm_ip() {
    VM="$1"
    if [ "$VM" == "" ]; then
      echo -e "[Usage]: ninja_get_vm_ip<VM-NAME>"
      return 1
    fi
    mac=$(virsh --connect qemu:///system dumpxml $VM | grep "mac address" | sed "s/.*'\(.*\)'.*/\1/g")
    ip=$(arp -an | grep "$mac" | awk '{ gsub(/[\(\)]/,"",$2); print $2 }')
    echo "$ip"
}
